---
- hosts: testing3
  become: true
  become_user: root
  tasks:
  - name: verifying application/databases are running or not
    shell: if ps -eaf |egrep 'httpd' | grep-v grep > /dev/null; then echo 'process_running'; else echo 'process_not_running'; fi
    ignore_errors: true
    register: app_proc_check
  - debug: msg="{{ app_proc_check.stdout  }}"

  - name: Decision point to start patching
    fail: msg="{{ inventory_hostname }} have running processes. please stop the application first then attempt patching"
    when: app_proc_check.stdout == "process_running"

  - name: upgrade all packages on the server
    yum:
     name=Kernel
     state=latest
    when: app_proc_check.stdout == "process_not_running"
    register: yum_update
  - debug: msg="Kernel Patch {{ ansible_kernel }} has been updated on server {{ ansible_hostname }}"
    when: yum_update.rc == 0

  - name: check if reboot is required after kernel update
    shell: kernel_new=$(rpm -qa --last kernel| head -1|awk '{print $1}'| sed 's/kernel-//g'}; kernel_now=$(uname -r); if [[ $kernel_now != $kernel_new ]]; then echo "reboot_required"; else echo "reboot_not_required"; fi
    ignore_errors: true
    register: reboot_status
